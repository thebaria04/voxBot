{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "botName": {
      "type": "string",
      "defaultValue": "teams-ai-foundry-bot",
      "metadata": {
        "description": "Name of the bot"
      }
    },
    "botDisplayName": {
      "type": "string",
      "defaultValue": "AI Foundry Teams Bot",
      "metadata": {
        "description": "Display name of the bot"
      }
    },
    "botDescription": {
      "type": "string",
      "defaultValue": "Intelligent Teams bot powered by Azure AI Foundry with speech capabilities",
      "metadata": {
        "description": "Description of the bot"
      }
    },
    "botAppId": {
      "type": "string",
      "metadata": {
        "description": "Azure AD Application ID for the bot"
      }
    },
    "botAppSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Azure AD Application secret for the bot"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "speechServiceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('botName'), '-speech-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Cognitive Services Speech service"
      }
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('botName'), '-app-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Web App"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('botName'), '-plan-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the App Service Plan"
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "SKU for the App Service Plan"
      }
    },
    "aiFoundryEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Azure AI Foundry endpoint URL"
      }
    },
    "aiFoundryApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Azure AI Foundry API key"
      }
    },
    "aiFoundryDeploymentName": {
      "type": "string",
      "defaultValue": "gpt-4",
      "metadata": {
        "description": "Azure AI Foundry deployment name"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "applicationInsightsName": "[concat(parameters('botName'), '-insights')]",
    "managedIdentityName": "[concat(parameters('botName'), '-identity')]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('managedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[parameters('speechServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "SpeechServices",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ],
      "properties": {
        "apiProperties": {},
        "customSubDomainName": "[parameters('speechServiceName')]",
        "networkAcls": {
          "defaultAction": "Allow"
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('speechServiceName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ],
      "kind": "app,linux",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "NODE|18-lts",
          "appSettings": [
            {
              "name": "MICROSOFT_APP_ID",
              "value": "[parameters('botAppId')]"
            },
            {
              "name": "MICROSOFT_APP_TYPE",
              "value": "SingleTenant"
            },
            {
              "name": "AI_FOUNDRY_ENDPOINT",
              "value": "[parameters('aiFoundryEndpoint')]"
            },
            {
              "name": "AI_FOUNDRY_DEPLOYMENT_NAME",
              "value": "[parameters('aiFoundryDeploymentName')]"
            },
            {
              "name": "SPEECH_SERVICE_KEY",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('speechServiceName')), '2023-05-01').key1]"
            },
            {
              "name": "SPEECH_SERVICE_REGION",
              "value": "[parameters('location')]"
            },
            {
              "name": "SPEECH_LANGUAGE",
              "value": "en-US"
            },
            {
              "name": "SPEECH_VOICE_NAME",
              "value": "en-US-JennyNeural"
            },
            {
              "name": "GRAPH_SCOPES",
              "value": "https://graph.microsoft.com/.default"
            },
            {
              "name": "NODE_ENV",
              "value": "production"
            },
            {
              "name": "LOG_LEVEL",
              "value": "info"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
            },
            {
              "name": "AZURE_CLIENT_ID",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).clientId]"
            }
          ]
        },
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.BotService/botServices",
      "apiVersion": "2021-03-01",
      "name": "[parameters('botName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ],
      "sku": {
        "name": "F0"
      },
      "kind": "azurebot",
      "properties": {
        "displayName": "[parameters('botDisplayName')]",
        "description": "[parameters('botDescription')]",
        "iconUrl": "https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png",
        "endpoint": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('webAppName'))).defaultHostName, '/api/messages')]",
        "msaAppId": "[parameters('botAppId')]",
        "msaAppType": "SingleTenant",
        "msaAppTenantId": "[subscription().tenantId]",
        "luisAppIds": [],
        "schemaTransformationVersion": "1.3",
        "isCmekEnabled": false,
        "isIsolated": false
      }
    },
    {
      "type": "Microsoft.BotService/botServices/channels",
      "apiVersion": "2022-09-15",
      "name": "[concat(parameters('botName'), '/MsTeamsChannel')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.BotService/botServices', parameters('botName'))]"
      ],
      "properties": {
        "channelName": "MsTeamsChannel",
        "properties": {
          "enableCalling": true,
          "callingWebhook": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('webAppName'))).defaultHostName, '/api/calling')]",
          "isEnabled": true
        }
      }
    }
  ],
  "outputs": {
    "botEndpoint": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('webAppName'))).defaultHostName)]"
    },
    "speechServiceName": {
      "type": "string",
      "value": "[parameters('speechServiceName')]"
    },
    "managedIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).clientId]"
    },
    "webAppName": {
      "type": "string",
      "value": "[parameters('webAppName')]"
    }
  }
}
